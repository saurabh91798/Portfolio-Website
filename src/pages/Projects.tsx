import { useState } from "react"
import { ExternalLink, Github } from "lucide-react"

interface Project {
  id: number
  title: string
  description: string
  image: string
  tags: string[]
  github?: string
  demo?: string
}

const Projects = () => {
  const [filter, setFilter] = useState<string>("all")

  const projects: Project[] = [
    {
      id: 1,
      title: "Mock Interview Platform",
      description:
        "A Website where you can give mock interviews generated by Gemini AI (Google) and get the feedback.",
      image: "./prepwise.png",
      tags: ["Gemini AI", "react", "Vapi AI"],
      github: "https://github.com/saurabh91798/Mock_Interviews",
      demo: "https://mock-interviews-azure.vercel.app/",
    },
    {
      id: 2,
      title: "VsCode themed Portfolio Website",
      description:
        "A Portfolio website where you can look at my CV and the work that i have done",
      image: "./portfolio.png",
      tags: ["vite", "react", "typescript"],
      github: "https://github.com/saurabh91798/Portfolio-Website",
      demo: "https://ksaurabhrao.netlify.app/",
    },
    {
      id: 3,
      title: "Task Manager/ Todo App",
      description:
        "A react based todo app where you can have task listed down and mark it as completed",
      image: "./task.png",
      tags: ["react", "tailwind"],
      github: "https://github.com/saurabh91798/Task-Manager",
      demo: "https://task-manager-eta-one.vercel.app/",
    },
    {
      id: 4,
      title: "Bot-AI",
      description:
        "BotAI is a ReactJS web application designed to provide users with the ability to engage in conversations with an AI model.",
      image: "./Bot-Ai.png",
      tags: ["react", "nodejs"],
      github: "https://github.com/saurabh91798/X-BotAI",
      demo: "https://vercel.com/saurabh91798-gmailcoms-projects/x-bot-ai",
    },
    
  ]

  const filteredProjects = filter === "all" ? projects : projects.filter((project) => project.tags.includes(filter))

  const uniqueTags = Array.from(new Set(projects.flatMap((project) => project.tags)))

  return (
    <div className="p-8 md:p-16 lg:p-24 relative min-h-[calc(100vh-72px)]">
      {/* Background Text */}
      <div className="absolute top-0 left-0 text-[#2a2a2a] text-[180px] font-bold leading-none z-0 select-none">
        PROJECTS
      </div>

      {/* Content */}
      <div className="relative z-10">
        <h1 className="text-4xl md:text-5xl font-bold mb-6 text-[#ff7b72]">My Projects</h1>

        {/* Filter Buttons */}
        <div className="mb-8 flex flex-wrap gap-2">
          <button
            onClick={() => setFilter("all")}
            className={`px-4 py-1 rounded text-sm ${filter === "all" ? "bg-[#ff7b72] text-white" : "bg-[#2a2a2a] hover:bg-[#3a3a3a]"}`}
          >
            All
          </button>
          {uniqueTags.map((tag) => (
            <button
              key={tag}
              onClick={() => setFilter(tag)}
              className={`px-4 py-1 rounded text-sm capitalize ${filter === tag ? "bg-[#ff7b72] text-white" : "bg-[#2a2a2a] hover:bg-[#3a3a3a]"}`}
            >
              {tag}
            </button>
          ))}
        </div>

        {/* Projects Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredProjects.map((project) => (
            <div
              key={project.id}
              className="bg-[#2a2a2a] rounded-lg overflow-hidden hover:transform hover:scale-[1.02] transition-transform"
            >
              <div className="h-48 overflow-hidden">
                <img
                  src={project.image || "/placeholder.svg"}
                  alt={project.title}
                  className="w-full h-full object-cover"
                />
              </div>
              <div className="p-5">
                <h3 className="text-xl font-semibold mb-2">{project.title}</h3>
                <p className="text-gray-300 text-sm mb-4">{project.description}</p>
                <div className="flex flex-wrap gap-2 mb-4">
                  {project.tags.map((tag) => (
                    <span key={tag} className="bg-[#1e1e1e] px-2 py-1 rounded text-xs capitalize">
                      {tag}
                    </span>
                  ))}
                </div>
                <div className="flex gap-3">
                  {project.github && (
                    <a
                      href={project.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center text-sm hover:text-[#ff7b72]"
                    >
                      <Github size={16} className="mr-1" />
                      Code
                    </a>
                  )}
                  {project.demo && (
                    <a
                      href={project.demo}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center text-sm hover:text-[#ff7b72]"
                    >
                      <ExternalLink size={16} className="mr-1" />
                      Live Demo
                    </a>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  )
}

export default Projects

